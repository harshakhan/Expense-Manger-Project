{"ast":null,"code":"var _jsxFileName = \"/home/harsha/Documents/REACT_PROJECT/Payment-Management-System/src/MainComponents/DashboardComponents/Chart.jsx\";\nimport React, { Component } from \"react\";\nimport { Pie } from 'react-chartjs-2';\nimport { connect } from \"react-redux\";\n\nclass Chart extends Component {\n  render() {\n    const {\n      data\n    } = this.props;\n    var categories = [];\n    var expenses = [];\n    var total = []; // var names = ['Total Income', 'Total Expense'];\n\n    var totalIncome = 0;\n    var totalExpense = 0;\n\n    if (data.length >= 1) {\n      data.map(item => categories = [...categories, item.title.category]);\n      categories = categories.filter((val, a, c) => c.indexOf(val) === a); // Calculated the total Income and Expense\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].title.type === \"Income\") totalIncome += Number(data[i].title.amount);else if (data[i].title.type === \"Expense\") totalExpense += Number(data[i].title.amount);\n      }\n\n      total.push(totalIncome, totalExpense); // Data for categorywise Expense start\n\n      for (let i = 0; i < categories.length; i++) {\n        let sum = 0;\n\n        for (let j = 0; j < data.length; j++) {\n          if (data[j].title.type === \"Expense\") {\n            if (categories[i] === data[j].title.category) {\n              sum += Number(data[j].title.amount);\n            }\n          }\n        }\n\n        expenses.push(sum);\n      }\n\n      var chartData = {\n        labels: categories,\n        datasets: [{\n          label: \"Expenses\",\n          data: expenses,\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n        }]\n      }; // Data for categorywise Expense end\n      // Data for userwise Expense start\n\n      var totalData = {\n        labels: ['Total Income', 'Total Expense'],\n        datasets: [{\n          label: \"Expenses\",\n          data: total,\n          backgroundColor: ['rgba(139, 195, 74,1.0)', 'rgba(239, 83, 80,1.0)']\n        }]\n      }; // Data for userwise Expense end\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conatiner-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pt-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 38\n      }\n    }, \" Total Income : \", totalIncome), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 39\n      }\n    }, \" Total Expense : \", totalExpense)))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Expenses by Category \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Pie, {\n      data: chartData,\n      height: 108,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Total Income & Expense \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Pie, {\n      data: totalData,\n      height: 108,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(Chart);","map":{"version":3,"sources":["/home/harsha/Documents/REACT_PROJECT/Payment-Management-System/src/MainComponents/DashboardComponents/Chart.jsx"],"names":["React","Component","Pie","connect","Chart","render","data","props","categories","expenses","total","totalIncome","totalExpense","length","map","item","title","category","filter","val","a","c","indexOf","i","type","Number","amount","push","sum","j","chartData","labels","datasets","label","backgroundColor","totalData","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Chart extends Component {\r\n    render() {\r\n        const { data } = this.props\r\n        var categories = [];\r\n        var expenses = [];\r\n        var total = [];\r\n        // var names = ['Total Income', 'Total Expense'];\r\n\r\n        var totalIncome = 0;\r\n        var totalExpense = 0;\r\n\r\n        if (data.length >= 1) {\r\n            data.map(item => categories = [...categories, (item.title.category)])\r\n\r\n\r\n            categories = categories.filter((val, a, c) => c.indexOf(val) === a)\r\n            // Calculated the total Income and Expense\r\n            for(let i=0; i < data.length; i++){\r\n                if(data[i].title.type === \"Income\")\r\n                    totalIncome += Number(data[i].title.amount)\r\n                else if(data[i].title.type === \"Expense\")\r\n                    totalExpense += Number(data[i].title.amount)\r\n            }\r\n            total.push(totalIncome, totalExpense)\r\n            // Data for categorywise Expense start\r\n            for (let i = 0; i < categories.length; i++) {\r\n                let sum = 0;\r\n                for (let j = 0; j < data.length; j++) {\r\n                    if(data[j].title.type === \"Expense\"){\r\n                        if (categories[i] === data[j].title.category) {\r\n                            sum += Number(data[j].title.amount)\r\n                        }\r\n\r\n                    }\r\n                }\r\n                expenses.push(sum)\r\n            }\r\n            var chartData = {\r\n                labels: categories,\r\n                datasets: [\r\n                    {\r\n                        label: \"Expenses\",\r\n                        data: expenses,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)',\r\n                            'rgba(255, 159, 64, 0.6)',\r\n                            'rgba(255, 99, 132, 0.6)'\r\n                        ]\r\n\r\n                    }\r\n                ]\r\n            }\r\n            // Data for categorywise Expense end\r\n\r\n            // Data for userwise Expense start\r\n            var totalData = {\r\n                labels: ['Total Income', 'Total Expense'],\r\n                datasets: [\r\n                    {\r\n                        label: \"Expenses\",\r\n                        data: total,\r\n                        backgroundColor: [\r\n                            'rgba(139, 195, 74,1.0)',\r\n                            'rgba(239, 83, 80,1.0)',\r\n                        ]\r\n\r\n                    }\r\n                ]\r\n            }\r\n            // Data for userwise Expense end\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"conatiner-fluid\">\r\n                <div className =\"row pt-2 text-center\">\r\n                <div className=\"col\"><h6> Total Income : {totalIncome}</h6> </div>\r\n                <div className=\"col\"> <h6> Total Expense : {totalExpense}</h6></div>\r\n                </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h3 className=\"text-center\">Expenses by Category </h3>\r\n                    <hr />\r\n                    <Pie data={chartData} height={108}/>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h3 className=\"text-center\">Total Income & Expense </h3>\r\n                    <hr />\r\n                    <Pie data={totalData} height={108}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Chart);"]},"metadata":{},"sourceType":"module"}